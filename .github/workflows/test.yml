name: hwcctl Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.24.3"

jobs:
  # 快速检查：代码质量和构建
  quality:
    name: Code Quality & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Set up GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true

      - name: Run CI quality checks
        run: task ci-quality

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: hwcctl-binary
          path: dist/
          retention-days: 1

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.html
          retention-days: 30

  # 测试结果汇总
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [quality]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "代码质量检查: ${{ needs.quality.result }}"

          if [[ "${{ needs.quality.result }}" == "success" ]]; then
            echo "🎉 所有测试通过！"
            exit 0
          else
            echo "❌ 测试失败，请检查日志"
            exit 1
          fi
